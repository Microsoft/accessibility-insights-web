# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.
trigger: # trigger only affects CI builds
    branches:
        include:
            - master

pr: # pr does not trigger CI builds
    branches:
        include:
            - '*' # must quote since "*" is a YAML reserved character; we want a string

jobs:
    - job: 'unit_tests_and_lints'

      pool:
          vmImage: 'macOS-10.14'

      steps:
          - template: pipeline/install-node-prerequisites.yaml

          - script: yarn lint:check
            displayName: check lint errors

          - script: yarn format:check
            displayName: check formatting errors

          - script: yarn copyright:check
            displayName: check copyrightheaders

          - script: yarn scss:build
            displayName: generate typings for scss files

          - script: yarn test --ci
            displayName: run unit tests

          - task: PublishTestResults@2
            inputs:
                testResultsFiles: $(System.DefaultWorkingDirectory)/test-results/unit/junit.xml
                testRunTitle: $(Agent.JobName)
            condition: always()
            displayName: publish test results

          - task: PublishCodeCoverageResults@1
            inputs:
                codeCoverageTool: Cobertura
                summaryFileLocation: $(System.DefaultWorkingDirectory)/test-results/unit/coverage/cobertura-coverage.xml
                failIfCoverageEmpty: true
                # We care most about the summary information; adding the detailed files doesn't give enough extra information
                # to be worth the 1min it adds to the build.
                # Consider re-enabling this once https://github.com/Microsoft/azure-pipelines-tasks/issues/4945 is resolved.
                # reportDirectory: $(System.DefaultWorkingDirectory)/test-results/unit/coverage/lcov-report
            displayName: publish code coverage

          - script: yarn publish-code-coverage -t $(CODECOV_TOKEN)
            displayName: Publish code coverage to codecov

          # CI build only
          - task: ComponentGovernanceComponentDetection@0
            displayName: 'Component Detection'
            condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'))
            inputs:
                verbosity: Normal

    - job: 'publish_build_drops'
      pool:
          vmImage: 'ubuntu-16.04'
      steps:
          - template: pipeline/install-node-prerequisites.yaml

          - script: yarn build:all
            displayName: build:all

          - task: PublishBuildArtifacts@1
            inputs:
                pathtoPublish: '$(System.DefaultWorkingDirectory)/drop'
                artifactName: 'drop'
            displayName: publish drop

    - job: 'e2e_mac_web_unified'
      pool:
          vmImage: macOS-10.14
      steps:
          - template: pipeline/install-node-prerequisites.yaml
          - template: pipeline/e2e-test-from-agent.yaml
          - template: pipeline/e2e-test-publish-results.yaml
          - template: pipeline/unified/unified-e2e-test-interactive.yaml
          - template: pipeline/unified/unified-e2e-publish-results.yaml

    - job: 'e2e_linux_unified'
      pool:
          vmImage: ubuntu-16.04
      steps:
          - template: pipeline/install-node-prerequisites.yaml
          - template: pipeline/unified/unified-e2e-test-linux.yaml
          - template: pipeline/unified/unified-e2e-publish-results.yaml

    - job: 'e2e_windows_unified'
      pool:
          vmImage: windows-latest
      steps:
          - template: pipeline/install-node-prerequisites.yaml
          - template: pipeline/unified/unified-e2e-test-interactive.yaml
          - template: pipeline/unified/unified-e2e-publish-results.yaml
