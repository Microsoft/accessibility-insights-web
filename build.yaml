# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.
jobs:
    - job: 'unit_tests_and_lints'

      pool:
          vmImage: 'macOS-10.14'

      steps:
          - template: pipeline/install-node-prerequisites.yaml

          - script: yarn tslint
            displayName: check lint errors

          - script: yarn format-check
            displayName: check formatting errors

          - script: yarn copyrightheaders
            displayName: check copyrightheaders

          - script: yarn generate-scss-typings
            displayName: generate typings for scss files

          - script: yarn test --ci
            displayName: run unit tests

          - task: PublishTestResults@2
            inputs:
                testResultsFiles: $(System.DefaultWorkingDirectory)/test-results/unit/junit.xml
                testRunTitle: $(Agent.JobName)
            condition: always()
            displayName: publish test results

          - task: PublishCodeCoverageResults@1
            inputs:
                codeCoverageTool: Cobertura
                summaryFileLocation: $(System.DefaultWorkingDirectory)/test-results/unit/coverage/cobertura-coverage.xml
                failIfCoverageEmpty: true
                # We care most about the summary information; adding the detailed files doesn't give enough extra information
                # to be worth the 1min it adds to the build.
                # Consider re-enabling this once https://github.com/Microsoft/azure-pipelines-tasks/issues/4945 is resolved.
                # reportDirectory: $(System.DefaultWorkingDirectory)/test-results/unit/coverage/lcov-report
            displayName: publish code coverage

          # CI build only
          - task: ComponentGovernanceComponentDetection@0
            displayName: 'Component Detection'
            condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'))
            inputs:
                verbosity: Normal

    - job: 'publish_build_drops'
      pool:
          vmImage: 'ubuntu-16.04'
      steps:
          - template: pipeline/install-node-prerequisites.yaml

          - script: yarn build:all
            displayName: build:all

          - task: PublishBuildArtifacts@1
            inputs:
                pathtoPublish: '$(System.DefaultWorkingDirectory)/drop'
                artifactName: 'drop'
            displayName: publish drop

    # CI build only
    - job: 'publish_electron_dist'
      condition: and(always(), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'))
      pool:
          vmImage: 'windows-latest'
      steps:
          - template: pipeline/install-node-prerequisites.yaml

          - script: yarn dist:electron -wl
            displayName: create electron distributables (windows, linux)

          - task: PublishBuildArtifacts@1
            inputs:
                pathtoPublish: '$(System.DefaultWorkingDirectory)/dist'
                artifactName: 'dist'
            displayName: publish dist

    - job: 'electron_tests_mac'
      pool:
          vmImage: macOS-10.14
      steps:
          - template: pipeline/install-node-prerequisites.yaml
          - template: pipeline/electron-e2e-test.yaml

    - job: 'electron_tests_linux'
      pool:
          vmImage: ubuntu-16.04
      steps:
          - template: pipeline/install-node-prerequisites.yaml
          - template: pipeline/electron-e2e-test.yaml

    - job: 'electron_tests_windows'
      pool:
          vmImage: windows-latest
      steps:
          - template: pipeline/install-node-prerequisites.yaml
          - template: pipeline/electron-e2e-test.yaml
