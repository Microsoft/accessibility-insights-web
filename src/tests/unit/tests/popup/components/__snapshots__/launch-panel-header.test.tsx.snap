// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LaunchPanelHeaderTest render 1`] = `
<Header
  rowExtraClassName="header-title"
  subtitle="test subtitle"
  title="test title"
>
  <div
    className="ms-Grid-col ms-u-sm2 feedback-collapseMenuButton-col"
  >
    <GearOptionsButtonComponent
      dropdownClickHandler={Object {}}
      featureFlags={Object {}}
    />
    <CustomizedIconButton
      ariaLabel="Help and Feedback menu"
      iconProps={
        Object {
          "iconName": "GlobalNavButton",
        }
      }
      id="feedback-collapse-menu-button"
      onClick={[Function]}
    />
  </div>
</Header>
`;

exports[`LaunchPanelHeaderTest render contextual menu renders with new assessment experience 1`] = `
<Header
  rowExtraClassName="header-title"
  subtitle="test subtitle"
  title="test title"
>
  <div
    className="ms-Grid-col ms-u-sm2 feedback-collapseMenuButton-col"
  >
    <GearOptionsButtonComponent
      dropdownClickHandler={Object {}}
      featureFlags={
        Object {
          "newAssessmentExperience": true,
        }
      }
    />
    <CustomizedIconButton
      ariaLabel="Help and Feedback menu"
      iconProps={
        Object {
          "iconName": "GlobalNavButton",
        }
      }
      id="feedback-collapse-menu-button"
      onClick={[Function]}
    />
    <HeaderContextualMenu
      deps={
        Object {
          "dropdownClickHandler": Object {},
          "launchPanelHeaderClickHandler": Object {},
          "popupActionMessageCreator": Object {},
        }
      }
      featureFlags={
        Object {
          "newAssessmentExperience": true,
        }
      }
      header={
        LaunchPanelHeader {
          "context": Object {},
          "props": Object {
            "deps": Object {
              "dropdownClickHandler": Object {},
              "launchPanelHeaderClickHandler": Object {},
              "popupActionMessageCreator": Object {},
            },
            "dropdownClickHandler": Object {},
            "featureFlags": Object {
              "newAssessmentExperience": true,
            },
            "openAdhocToolsPanel": [Function],
            "openFeedbackDialog": Object {},
            "openGettingStartedDialog": Object {},
            "popupWindow": Object {},
            "subtitle": "test subtitle",
            "title": "test title",
          },
          "refs": Object {},
          "setState": [Function],
          "state": Object {
            "isContextMenuVisible": true,
            "target": "test-target",
          },
          "updater": Updater {
            "_callbacks": Array [],
            "_renderer": ReactShallowRenderer {
              "_context": Object {},
              "_didScheduleRenderPhaseUpdate": false,
              "_dispatcher": Object {
                "readContext": [Function],
                "useCallback": [Function],
                "useContext": [Function],
                "useDebugValue": [Function],
                "useDeferredValue": [Function],
                "useEffect": [Function],
                "useImperativeHandle": [Function],
                "useLayoutEffect": [Function],
                "useMemo": [Function],
                "useReducer": [Function],
                "useRef": [Function],
                "useResponder": [Function],
                "useState": [Function],
                "useTransition": [Function],
              },
              "_element": <LaunchPanelHeader
                deps={
                  Object {
                    "dropdownClickHandler": Object {},
                    "launchPanelHeaderClickHandler": Object {},
                    "popupActionMessageCreator": Object {},
                  }
                }
                dropdownClickHandler={Object {}}
                featureFlags={
                  Object {
                    "newAssessmentExperience": true,
                  }
                }
                openAdhocToolsPanel={[Function]}
                openFeedbackDialog={Object {}}
                openGettingStartedDialog={Object {}}
                popupWindow={Object {}}
                subtitle="test subtitle"
                title="test title"
              />,
              "_firstWorkInProgressHook": null,
              "_forcedUpdate": false,
              "_instance": [Circular],
              "_isReRender": false,
              "_newState": null,
              "_numberOfReRenders": 0,
              "_renderPhaseUpdates": null,
              "_rendered": <Header
                rowExtraClassName="header-title"
                subtitle="test subtitle"
                title="test title"
              >
                <div
                  className="ms-Grid-col ms-u-sm2 feedback-collapseMenuButton-col"
                >
                  <GearOptionsButtonComponent
                    dropdownClickHandler={Object {}}
                    featureFlags={
                      Object {
                        "newAssessmentExperience": true,
                      }
                    }
                  />
                  <CustomizedIconButton
                    ariaLabel="Help and Feedback menu"
                    iconProps={
                      Object {
                        "iconName": "GlobalNavButton",
                      }
                    }
                    id="feedback-collapse-menu-button"
                    onClick={[Function]}
                  />
                  <HeaderContextualMenu
                    deps={
                      Object {
                        "dropdownClickHandler": Object {},
                        "launchPanelHeaderClickHandler": Object {},
                        "popupActionMessageCreator": Object {},
                      }
                    }
                    featureFlags={
                      Object {
                        "newAssessmentExperience": true,
                      }
                    }
                    header={[Circular]}
                    popupWindow={Object {}}
                    target="test-target"
                  />
                </div>
              </Header>,
              "_rendering": false,
              "_updater": [Circular],
              "_workInProgressHook": null,
            },
          },
        }
      }
      popupWindow={Object {}}
      target="test-target"
    />
  </div>
</Header>
`;

exports[`LaunchPanelHeaderTest render contextual menu renders without new assessment experience 1`] = `
<Header
  rowExtraClassName="header-title"
  subtitle="test subtitle"
  title="test title"
>
  <div
    className="ms-Grid-col ms-u-sm2 feedback-collapseMenuButton-col"
  >
    <GearOptionsButtonComponent
      dropdownClickHandler={Object {}}
      featureFlags={Object {}}
    />
    <CustomizedIconButton
      ariaLabel="Help and Feedback menu"
      iconProps={
        Object {
          "iconName": "GlobalNavButton",
        }
      }
      id="feedback-collapse-menu-button"
      onClick={[Function]}
    />
    <HeaderContextualMenu
      deps={
        Object {
          "dropdownClickHandler": Object {},
          "launchPanelHeaderClickHandler": Object {},
          "popupActionMessageCreator": Object {},
        }
      }
      featureFlags={Object {}}
      header={
        LaunchPanelHeader {
          "context": Object {},
          "props": Object {
            "deps": Object {
              "dropdownClickHandler": Object {},
              "launchPanelHeaderClickHandler": Object {},
              "popupActionMessageCreator": Object {},
            },
            "dropdownClickHandler": Object {},
            "featureFlags": Object {},
            "openAdhocToolsPanel": [Function],
            "openFeedbackDialog": Object {},
            "openGettingStartedDialog": Object {},
            "popupWindow": Object {},
            "subtitle": "test subtitle",
            "title": "test title",
          },
          "refs": Object {},
          "setState": [Function],
          "state": Object {
            "isContextMenuVisible": true,
            "target": "test-target",
          },
          "updater": Updater {
            "_callbacks": Array [],
            "_renderer": ReactShallowRenderer {
              "_context": Object {},
              "_didScheduleRenderPhaseUpdate": false,
              "_dispatcher": Object {
                "readContext": [Function],
                "useCallback": [Function],
                "useContext": [Function],
                "useDebugValue": [Function],
                "useDeferredValue": [Function],
                "useEffect": [Function],
                "useImperativeHandle": [Function],
                "useLayoutEffect": [Function],
                "useMemo": [Function],
                "useReducer": [Function],
                "useRef": [Function],
                "useResponder": [Function],
                "useState": [Function],
                "useTransition": [Function],
              },
              "_element": <LaunchPanelHeader
                deps={
                  Object {
                    "dropdownClickHandler": Object {},
                    "launchPanelHeaderClickHandler": Object {},
                    "popupActionMessageCreator": Object {},
                  }
                }
                dropdownClickHandler={Object {}}
                featureFlags={Object {}}
                openAdhocToolsPanel={[Function]}
                openFeedbackDialog={Object {}}
                openGettingStartedDialog={Object {}}
                popupWindow={Object {}}
                subtitle="test subtitle"
                title="test title"
              />,
              "_firstWorkInProgressHook": null,
              "_forcedUpdate": false,
              "_instance": [Circular],
              "_isReRender": false,
              "_newState": null,
              "_numberOfReRenders": 0,
              "_renderPhaseUpdates": null,
              "_rendered": <Header
                rowExtraClassName="header-title"
                subtitle="test subtitle"
                title="test title"
              >
                <div
                  className="ms-Grid-col ms-u-sm2 feedback-collapseMenuButton-col"
                >
                  <GearOptionsButtonComponent
                    dropdownClickHandler={Object {}}
                    featureFlags={Object {}}
                  />
                  <CustomizedIconButton
                    ariaLabel="Help and Feedback menu"
                    iconProps={
                      Object {
                        "iconName": "GlobalNavButton",
                      }
                    }
                    id="feedback-collapse-menu-button"
                    onClick={[Function]}
                  />
                  <HeaderContextualMenu
                    deps={
                      Object {
                        "dropdownClickHandler": Object {},
                        "launchPanelHeaderClickHandler": Object {},
                        "popupActionMessageCreator": Object {},
                      }
                    }
                    featureFlags={Object {}}
                    header={[Circular]}
                    popupWindow={Object {}}
                    target="test-target"
                  />
                </div>
              </Header>,
              "_rendering": false,
              "_updater": [Circular],
              "_workInProgressHook": null,
            },
          },
        }
      }
      popupWindow={Object {}}
      target="test-target"
    />
  </div>
</Header>
`;
