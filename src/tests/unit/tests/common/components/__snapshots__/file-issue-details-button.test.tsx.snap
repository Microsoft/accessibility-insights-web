// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FileIssueDetailsButtonTest render and click with an issue tracker path 1`] = `
<React.Fragment>
  <CustomizedDefaultButton
    className="create-bug-button"
    componentRef={
      Object {
        "current": null,
      }
    }
    href="https://github.com/example/example/issues/new?title=buildTitle&body=buildText"
    onClick={[Function]}
    target="_blank"
  >
    <LadyBugSolidIcon />
    <div
      className="ms-Button-label"
    >
      File issue
    </div>
  </CustomizedDefaultButton>
  <FileIssueDetailsDialog
    buttonRef={
      Object {
        "current": null,
      }
    }
    fileIssueDetailsHandler={
      FileIssueDetailsHandler {
        "htmlElementUtils": HTMLElementUtils {
          "clientWindow": [Window],
          "dom": Document {
            "location": Location {
              "assign": [Function],
              "hash": "",
              "host": "localhost",
              "hostname": "localhost",
              "href": "http://localhost/",
              "origin": "http://localhost",
              "pathname": "/",
              "port": "",
              "protocol": "http:",
              "reload": [Function],
              "replace": [Function],
              "search": "",
              "toString": [Function],
            },
          },
        },
      }
    }
    getSettingsPanel={[Function]}
    isOpen={false}
    onDismiss={[Function]}
    onOpenSettings={[Function]}
    restoreFocus={false}
  />
</React.Fragment>
`;

exports[`FileIssueDetailsButtonTest render and click with an issue tracker path 2`] = `
<React.Fragment>
  <CustomizedDefaultButton
    className="create-bug-button"
    componentRef={
      Object {
        "current": null,
      }
    }
    href="https://github.com/example/example/issues/new?title=buildTitle&body=buildText"
    onClick={[Function]}
    target="_blank"
  >
    <LadyBugSolidIcon />
    <div
      className="ms-Button-label"
    >
      File issue
    </div>
  </CustomizedDefaultButton>
  <FileIssueDetailsDialog
    buttonRef={
      Object {
        "current": null,
      }
    }
    fileIssueDetailsHandler={
      FileIssueDetailsHandler {
        "htmlElementUtils": HTMLElementUtils {
          "clientWindow": [Window],
          "dom": Document {
            "location": Location {
              "assign": [Function],
              "hash": "",
              "host": "localhost",
              "hostname": "localhost",
              "href": "http://localhost/",
              "origin": "http://localhost",
              "pathname": "/",
              "port": "",
              "protocol": "http:",
              "reload": [Function],
              "replace": [Function],
              "search": "",
              "toString": [Function],
            },
          },
        },
      }
    }
    getSettingsPanel={[Function]}
    isOpen={false}
    onDismiss={[Function]}
    onOpenSettings={[Function]}
    restoreFocus={false}
  />
</React.Fragment>
`;

exports[`FileIssueDetailsButtonTest render and click without issue tracker set 1`] = `
<React.Fragment>
  <React.Fragment>
    <CustomizedDefaultButton
      className="create-bug-button"
      componentRef={
        Object {
          "current": null,
        }
      }
      onClick={[Function]}
    >
      <LadyBugSolidIcon />
      <div
        className="ms-Button-label"
      >
        File issue
      </div>
    </CustomizedDefaultButton>
  </React.Fragment>
  <FileIssueDetailsDialog
    buttonRef={
      Object {
        "current": null,
      }
    }
    fileIssueDetailsHandler={
      FileIssueDetailsHandler {
        "htmlElementUtils": HTMLElementUtils {
          "clientWindow": [Window],
          "dom": Document {
            "location": Location {
              "assign": [Function],
              "hash": "",
              "host": "localhost",
              "hostname": "localhost",
              "href": "http://localhost/",
              "origin": "http://localhost",
              "pathname": "/",
              "port": "",
              "protocol": "http:",
              "reload": [Function],
              "replace": [Function],
              "search": "",
              "toString": [Function],
            },
          },
        },
      }
    }
    getSettingsPanel={[Function]}
    isOpen={false}
    onDismiss={[Function]}
    onOpenSettings={[Function]}
    restoreFocus={false}
  />
</React.Fragment>
`;

exports[`FileIssueDetailsButtonTest render and click without issue tracker set 2`] = `
<React.Fragment>
  <React.Fragment>
    <CustomizedDefaultButton
      className="create-bug-button"
      componentRef={
        Object {
          "current": null,
        }
      }
      onClick={[Function]}
    >
      <LadyBugSolidIcon />
      <div
        className="ms-Button-label"
      >
        File issue
      </div>
    </CustomizedDefaultButton>
    <div
      aria-live="polite"
      className="create-bug-button-help"
      role="alert"
    >
      Go to Settings to configure issue filing.
    </div>
  </React.Fragment>
  <FileIssueDetailsDialog
    buttonRef={
      Object {
        "current": null,
      }
    }
    fileIssueDetailsHandler={
      FileIssueDetailsHandler {
        "htmlElementUtils": HTMLElementUtils {
          "clientWindow": [Window],
          "dom": Document {
            "location": Location {
              "assign": [Function],
              "hash": "",
              "host": "localhost",
              "hostname": "localhost",
              "href": "http://localhost/",
              "origin": "http://localhost",
              "pathname": "/",
              "port": "",
              "protocol": "http:",
              "reload": [Function],
              "replace": [Function],
              "search": "",
              "toString": [Function],
            },
          },
        },
      }
    }
    getSettingsPanel={[Function]}
    isOpen={false}
    onDismiss={[Function]}
    onOpenSettings={[Function]}
    restoreFocus={false}
  />
</React.Fragment>
`;
