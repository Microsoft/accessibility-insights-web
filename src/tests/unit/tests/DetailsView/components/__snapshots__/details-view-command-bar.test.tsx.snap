// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DetailsViewCommandBar renders with buttons collapsed into a menu 1`] = `
"<div className=\\"detailsViewCommandBar\\">
  <div className=\\"detailsViewTargetPage\\" aria-labelledby=\\"switch-to-target\\">
    <span id=\\"switch-to-target\\">
      Target page: 
    </span>
    <StyledTooltipHostBase content=\\"Switch to target page: command-bar-test-tab-title\\" styles={{...}}>
      <StyledLinkBase role=\\"link\\" className=\\"insights-link targetPageLink\\" onClick={[Function: proxy]} aria-label=\\"Switch to target page: command-bar-test-tab-title\\">
        <span className=\\"targetPageTitle\\">
          command-bar-test-tab-title
        </span>
      </StyledLinkBase>
    </StyledTooltipHostBase>
  </div>
  <CommandBarButtonsMenu renderExportReportButton={[Function]} renderStartOverButton={[Function]} buttonRef={[Function: buttonRef]} />
  <StartOverDialog deps={{...}} tabStoreData={{...}} switcherNavConfiguration={{...}} scanMetadata={{...}} narrowModeStatus={{...}} dialogState=\\"none\\" dismissDialog={[Function]} afterDialogDismissed={[Function]} />
</div>"
`;

exports[`DetailsViewCommandBar renders with export button, with start over 1`] = `
<div
  className="detailsViewCommandBar"
>
  <div
    aria-labelledby="switch-to-target"
    className="detailsViewTargetPage"
  >
    <span
      id="switch-to-target"
    >
      Target page: 
    </span>
    <StyledTooltipHostBase
      content="Switch to target page: command-bar-test-tab-title"
      styles={
        Object {
          "root": Object {
            "display": "inline-block",
            "minWidth": 0,
          },
        }
      }
    >
      <StyledLinkBase
        aria-label="Switch to target page: command-bar-test-tab-title"
        className="insights-link targetPageLink"
        onClick={[Function]}
        role="link"
      >
        <span
          className="targetPageTitle"
        >
          command-bar-test-tab-title
        </span>
      </StyledLinkBase>
    </StyledTooltipHostBase>
  </div>
  <div
    className="detailsViewCommandButtons"
  >
    <ReportExportButton
      buttonRef={[Function]}
      showReportExportDialog={[Function]}
    />
    <CustomizedActionButton>
      Start Over Component
    </CustomizedActionButton>
  </div>
  <div>
    Export dialog
  </div>
  <StartOverDialog deps={{...}} tabStoreData={{...}} switcherNavConfiguration={{...}} scanMetadata={{...}} narrowModeStatus={{...}} dialogState=\\"none\\" dismissDialog={[Function]} afterDialogDismissed={[Function]} />
</div>"
`;

exports[`DetailsViewCommandBar renders with export button, without start over 1`] = `
<div
  className="detailsViewCommandBar"
>
  <div
    aria-labelledby="switch-to-target"
    className="detailsViewTargetPage"
  >
    <span
      id="switch-to-target"
    >
      Target page: 
    </span>
    <StyledTooltipHostBase
      content="Switch to target page: command-bar-test-tab-title"
      styles={
        Object {
          "root": Object {
            "display": "inline-block",
            "minWidth": 0,
          },
        }
      }
    >
      <StyledLinkBase
        aria-label="Switch to target page: command-bar-test-tab-title"
        className="insights-link targetPageLink"
        onClick={[Function]}
        role="link"
      >
        <span
          className="targetPageTitle"
        >
          command-bar-test-tab-title
        </span>
      </StyledLinkBase>
    </StyledTooltipHostBase>
  </div>
  <div
    className="detailsViewCommandButtons"
  >
    <ReportExportButton
      buttonRef={[Function]}
      showReportExportDialog={[Function]}
    />
  </div>
  <div>
    Export dialog
  </div>
  <StartOverDialog deps={{...}} tabStoreData={{...}} switcherNavConfiguration={{...}} scanMetadata={{...}} narrowModeStatus={{...}} dialogState=\\"none\\" dismissDialog={[Function]} afterDialogDismissed={[Function]} />
</div>"
`;

exports[`DetailsViewCommandBar renders with report export dialog open 1`] = `
<div
  className="detailsViewCommandBar"
>
  <div
    aria-labelledby="switch-to-target"
    className="detailsViewTargetPage"
  >
    <span
      id="switch-to-target"
    >
      Target page: 
    </span>
    <StyledTooltipHostBase
      content="Switch to target page: command-bar-test-tab-title"
      styles={
        Object {
          "root": Object {
            "display": "inline-block",
            "minWidth": 0,
          },
        }
      }
    >
      <StyledLinkBase
        aria-label="Switch to target page: command-bar-test-tab-title"
        className="insights-link targetPageLink"
        onClick={[Function]}
        role="link"
      >
        <span
          className="targetPageTitle"
        >
          command-bar-test-tab-title
        </span>
      </StyledLinkBase>
    </StyledTooltipHostBase>
  </div>
  <div
    className="detailsViewCommandButtons"
  >
    <ReportExportButton
      buttonRef={[Function]}
      showReportExportDialog={[Function]}
    />
  </div>
  <div>
    Export dialog
  </div>
  <StartOverDialog deps={{...}} tabStoreData={{...}} switcherNavConfiguration={{...}} scanMetadata={{...}} narrowModeStatus={{...}} dialogState=\\"none\\" dismissDialog={[Function]} afterDialogDismissed={[Function]} />
</div>"
`;

exports[`DetailsViewCommandBar renders with start assessment over dialog open 1`] = `
"<div className=\\"detailsViewCommandBar\\">
  <div className=\\"detailsViewTargetPage\\" aria-labelledby=\\"switch-to-target\\">
    <span id=\\"switch-to-target\\">
      Target page: 
    </span>
    <StyledTooltipHostBase content=\\"Switch to target page: command-bar-test-tab-title\\" styles={{...}}>
      <StyledLinkBase role=\\"link\\" className=\\"insights-link targetPageLink\\" onClick={[Function: proxy]} aria-label=\\"Switch to target page: command-bar-test-tab-title\\">
        <span className=\\"targetPageTitle\\">
          command-bar-test-tab-title
        </span>
      </StyledLinkBase>
    </StyledTooltipHostBase>
  </div>
  <div className=\\"detailsViewCommandButtons\\">
    <ReportExportButton showReportExportDialog={[Function]} buttonRef={[Function: buttonRef]} />
  </div>
  <StartOverDialog deps={{...}} tabStoreData={{...}} switcherNavConfiguration={{...}} scanMetadata={{...}} narrowModeStatus={{...}} dialogState=\\"assessment\\" dismissDialog={[Function]} afterDialogDismissed={[Function]} />
</div>"
`;

exports[`DetailsViewCommandBar renders with start test over dialog open 1`] = `
"<div className=\\"detailsViewCommandBar\\">
  <div className=\\"detailsViewTargetPage\\" aria-labelledby=\\"switch-to-target\\">
    <span id=\\"switch-to-target\\">
      Target page: 
    </span>
    <StyledTooltipHostBase content=\\"Switch to target page: command-bar-test-tab-title\\" styles={{...}}>
      <StyledLinkBase role=\\"link\\" className=\\"insights-link targetPageLink\\" onClick={[Function: proxy]} aria-label=\\"Switch to target page: command-bar-test-tab-title\\">
        <span className=\\"targetPageTitle\\">
          command-bar-test-tab-title
        </span>
      </StyledLinkBase>
    </StyledTooltipHostBase>
  </div>
  <div className=\\"detailsViewCommandButtons\\">
    <ReportExportButton showReportExportDialog={[Function]} buttonRef={[Function: buttonRef]} />
  </div>
  <StartOverDialog deps={{...}} tabStoreData={{...}} switcherNavConfiguration={{...}} scanMetadata={{...}} narrowModeStatus={{...}} dialogState=\\"test\\" dismissDialog={[Function]} afterDialogDismissed={[Function]} />
</div>"
`;

exports[`DetailsViewCommandBar renders without export button, with start over 1`] = `
<div
  className="detailsViewCommandBar"
>
  <div
    aria-labelledby="switch-to-target"
    className="detailsViewTargetPage"
  >
    <span
      id="switch-to-target"
    >
      Target page: 
    </span>
    <StyledTooltipHostBase
      content="Switch to target page: command-bar-test-tab-title"
      styles={
        Object {
          "root": Object {
            "display": "inline-block",
            "minWidth": 0,
          },
        }
      }
    >
      <StyledLinkBase
        aria-label="Switch to target page: command-bar-test-tab-title"
        className="insights-link targetPageLink"
        onClick={[Function]}
        role="link"
      >
        <span
          className="targetPageTitle"
        >
          command-bar-test-tab-title
        </span>
      </StyledLinkBase>
    </StyledTooltipHostBase>
  </div>
  <div
    className="detailsViewCommandButtons"
  >
    <CustomizedActionButton>
      Start Over Component
    </CustomizedActionButton>
  </div>
  <div>
    Export dialog
  </div>
  <StartOverDialog deps={{...}} tabStoreData={{...}} switcherNavConfiguration={{...}} scanMetadata={{...}} narrowModeStatus={{...}} dialogState=\\"none\\" dismissDialog={[Function]} afterDialogDismissed={[Function]} />
</div>"
`;

exports[`DetailsViewCommandBar renders without export button, without start over 1`] = `
<div
  className="detailsViewCommandBar"
>
  <div
    aria-labelledby="switch-to-target"
    className="detailsViewTargetPage"
  >
    <span
      id="switch-to-target"
    >
      Target page: 
    </span>
    <StyledTooltipHostBase
      content="Switch to target page: command-bar-test-tab-title"
      styles={
        Object {
          "root": Object {
            "display": "inline-block",
            "minWidth": 0,
          },
        }
      }
    >
      <StyledLinkBase
        aria-label="Switch to target page: command-bar-test-tab-title"
        className="insights-link targetPageLink"
        onClick={[Function]}
        role="link"
      >
        <span
          className="targetPageTitle"
        >
          command-bar-test-tab-title
        </span>
      </StyledLinkBase>
    </StyledTooltipHostBase>
  </div>
  <div>
    Export dialog
  </div>
  <StartOverDialog deps={{...}} tabStoreData={{...}} switcherNavConfiguration={{...}} scanMetadata={{...}} narrowModeStatus={{...}} dialogState=\\"none\\" dismissDialog={[Function]} afterDialogDismissed={[Function]} />
</div>"
`;
