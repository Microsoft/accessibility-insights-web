// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`IssuesTableTest render automated checks disabled 1`] = `
<div
  className="issues-table"
>
  <h1>
    test title
  </h1>
  <div
    className="issues-table-content"
  >
    <div
      className="details-view-command-bar"
    >
      <VisualizationToggle
        checked={false}
        className="automated-checks-details-view-toggle"
        disabled={false}
        label="Show failures"
        onClick={[Function]}
        visualizationName="Automated checks"
      />
    </div>
    <div
      className="details-disabled-message"
      role="alert"
    >
      Turn on 
      <Term>
        Automated checks
      </Term>
       to see a list of failures.
    </div>
  </div>
</div>
`;

exports[`IssuesTableTest render includes subtitle if specified 1`] = `
"<div className=\\"issues-table\\">
  <h1>
    test title
  </h1>
  <div className=\\"issues-table-subtitle\\">
    test subtitle text
  </div>
  <StyledSpinnerBase className=\\"details-view-spinner\\" size={3} label=\\"Loading...\\" />
</div>"
`;

exports[`IssuesTableTest render spinner for scanning state 1`] = `
"<div className=\\"issues-table\\">
  <h1>
    test title
  </h1>
  <div className=\\"issues-table-content\\">
    <div className=\\"details-view-command-bar\\">
      <VisualizationToggle label=\\"Show failures\\" checked={true} disabled={true} onClick={[Function: proxy]} className=\\"automated-checks-details-view-toggle\\" visualizationName=\\"Automated checks\\" />
    </div>
    <StyledSpinnerBase className=\\"details-view-spinner\\" size={3} label=\\"Scanning...\\" />
  </div>
</div>"
`;

exports[`IssuesTableTest render spinner, issuesEnabled == null 1`] = `
"<div className=\\"issues-table\\">
  <h1>
    test title
  </h1>
  <StyledSpinnerBase className=\\"details-view-spinner\\" size={3} label=\\"Loading...\\" />
</div>"
`;

exports[`IssuesTableTest render spinner, issuesEnabled is an empty object 1`] = `
<div
  className="issues-table"
>
  <h1>
    test title
  </h1>
  <div
    className="issues-table-content"
  >
    <div
      className="details-view-command-bar"
    >
      <VisualizationToggle
        checked={Object {}}
        className="automated-checks-details-view-toggle"
        disabled={false}
        label="Show failures"
        visualizationName="Automated checks"
      />
      <ReportExportComponent
        exportResultsType="AutomatedChecks"
        htmlGenerator={[Function]}
        pageTitle="pageTitle"
        reportGenerator={
          proxy {
            "___id": "BCDF5CE5-F0DF-40B7-8BA0-69DF395033C8",
            "assessmentReportHtmlGenerator": undefined,
            "generateAssessmentHtml": [Function],
            "generateHtml": [Function],
            "generateName": [Function],
            "reportHtmlGenerator": undefined,
            "reportNameGenerator": undefined,
          }
        }
        scanDate={Date { NaN }}
      />
    </div>
    <StyledSpinnerBase
      className="details-view-spinner"
      label="Loading data..."
      size={3}
    />
  </div>
</div>
`;

exports[`IssuesTableTest render table with 0 issues 1`] = `
"<div className=\\"issues-table\\">
  <h1>
    test title
  </h1>
  <div className=\\"issues-table-content\\">
    <div className=\\"details-view-command-bar\\">
      <VisualizationToggle label=\\"Show failures\\" checked={true} disabled={false} onClick={[Function: proxy]} className=\\"automated-checks-details-view-toggle\\" visualizationName=\\"Automated checks\\" />
      <ReportExportComponent deps={[undefined]} scanDate={{...}} reportGenerator={{...}} pageTitle=\\"pageTitle\\" exportResultsType=\\"AutomatedChecks\\" htmlGenerator={[Function: bound proxy]} />
    </div>
    <div className=\\"issues-table-details\\">
      <IssuesDetailsList violations={{...}} issuesTableHandler={{...}} issuesSelection={{...}} />
      <div className=\\"issue-detail-outer-container ms-Fabric\\">
        <IssuesDetailsPane deps={[undefined]} selectedIdToRuleResultMap={{...}} pageTitle=\\"pageTitle\\" pageUrl=\\"http://pageUrl\\" featureFlagData={{...}} userConfigurationStoreData={{...}} />
      </div>
    </div>
  </div>
</div>"
`;

exports[`IssuesTableTest render table with 1 issues 1`] = `
"<div className=\\"issues-table\\">
  <h1>
    test title
  </h1>
  <div className=\\"issues-table-content\\">
    <div className=\\"details-view-command-bar\\">
      <VisualizationToggle label=\\"Show failures\\" checked={true} disabled={false} onClick={[Function: proxy]} className=\\"automated-checks-details-view-toggle\\" visualizationName=\\"Automated checks\\" />
      <ReportExportComponent deps={[undefined]} scanDate={{...}} reportGenerator={{...}} pageTitle=\\"pageTitle\\" exportResultsType=\\"AutomatedChecks\\" htmlGenerator={[Function: bound proxy]} />
    </div>
    <div className=\\"issues-table-details\\">
      <IssuesDetailsList violations={{...}} issuesTableHandler={{...}} issuesSelection={{...}} />
      <div className=\\"issue-detail-outer-container ms-Fabric\\">
        <IssuesDetailsPane deps={[undefined]} selectedIdToRuleResultMap={{...}} pageTitle=\\"pageTitle\\" pageUrl=\\"http://pageUrl\\" featureFlagData={{...}} userConfigurationStoreData={{...}} />
      </div>
    </div>
  </div>
</div>"
`;

exports[`IssuesTableTest render table with 2 issues 1`] = `
"<div className=\\"issues-table\\">
  <h1>
    test title
  </h1>
  <div className=\\"issues-table-content\\">
    <div className=\\"details-view-command-bar\\">
      <VisualizationToggle label=\\"Show failures\\" checked={true} disabled={false} onClick={[Function: proxy]} className=\\"automated-checks-details-view-toggle\\" visualizationName=\\"Automated checks\\" />
      <ReportExportComponent deps={[undefined]} scanDate={{...}} reportGenerator={{...}} pageTitle=\\"pageTitle\\" exportResultsType=\\"AutomatedChecks\\" htmlGenerator={[Function: bound proxy]} />
    </div>
    <div className=\\"issues-table-details\\">
      <IssuesDetailsList violations={{...}} issuesTableHandler={{...}} issuesSelection={{...}} />
      <div className=\\"issue-detail-outer-container ms-Fabric\\">
        <IssuesDetailsPane deps={[undefined]} selectedIdToRuleResultMap={{...}} pageTitle=\\"pageTitle\\" pageUrl=\\"http://pageUrl\\" featureFlagData={{...}} userConfigurationStoreData={{...}} />
      </div>
    </div>
  </div>
</div>"
`;
