// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContentPage .Markup <CodeExample> renders with a highlight that breaks in the middle of multiple lines 1`] = `
<div
  className="code-example"
>
  <div
    className="code-example-code"
  >
    <CodeBlock>
      Line 1
      <br />
      Line 2 
      <span
        className="highlight"
      >
        HIGHLIGHT
        <br />
        HERE
      </span>
      Line 3
      <br />
      Line 4
    </CodeBlock>
  </div>
</div>
`;

exports[`ContentPage .Markup <CodeExample> renders with a highlight that spans multiple lines 1`] = `
<div
  className="code-example"
>
  <div
    className="code-example-code"
  >
    <CodeBlock>
      Line 1
      <br />
      
      <span
        className="highlight"
      >
        Line 2
        <br />
        Line 3
      </span>
      
      <br />
      Line 4
    </CodeBlock>
  </div>
</div>
`;

exports[`ContentPage .Markup <CodeExample> renders with a line breaks and a highlighted line 1`] = `
<div
  className="code-example"
>
  <div
    className="code-example-code"
  >
    <CodeBlock>
      Line 1
      <br />
      
      <span
        className="highlight"
      >
        Line 2
      </span>
      
      <br />
      Line 3
    </CodeBlock>
  </div>
</div>
`;

exports[`ContentPage .Markup <CodeExample> renders with a single line break 1`] = `
<div
  className="code-example"
>
  <div
    className="code-example-code"
  >
    <CodeBlock>
      Line 1
      <br />
      Line 2
    </CodeBlock>
  </div>
</div>
`;

exports[`ContentPage .Markup <CodeExample> renders with empty highlighted region 1`] = `
<div
  className="code-example"
>
  <div
    className="code-example-code"
  >
    <CodeBlock>
      Empty 
      <span
        className="highlight"
      >
        
      </span>
       highlight
    </CodeBlock>
  </div>
</div>
`;

exports[`ContentPage .Markup <CodeExample> renders with many highlighted regions 1`] = `
<div
  className="code-example"
>
  <div
    className="code-example-code"
  >
    <CodeBlock>
      With 
      <span
        className="highlight"
      >
        quite
      </span>
       a 
      <span
        className="highlight"
      >
        number
      </span>
       of 
      <span
        className="highlight"
      >
        highlights
      </span>
      .
    </CodeBlock>
  </div>
</div>
`;

exports[`ContentPage .Markup <CodeExample> renders with no highlighted region 1`] = `
<div
  className="code-example"
>
  <div
    className="code-example-code"
  >
    <CodeBlock>
      No highlight
    </CodeBlock>
  </div>
</div>
`;

exports[`ContentPage .Markup <CodeExample> renders with no title 1`] = `
<div
  className="code-example"
>
  <div
    className="code-example-code"
  >
    <CodeBlock>
      code
    </CodeBlock>
  </div>
</div>
`;

exports[`ContentPage .Markup <CodeExample> renders with one highlighted region 1`] = `
<div
  className="code-example"
>
  <div
    className="code-example-code"
  >
    <CodeBlock>
      One 
      <span
        className="highlight"
      >
        single
      </span>
       highlight
    </CodeBlock>
  </div>
</div>
`;

exports[`ContentPage .Markup <CodeExample> renders with title 1`] = `
<div
  className="code-example"
>
  <div
    className="code-example-title"
  >
    <h4>
      title
    </h4>
  </div>
  <div
    className="code-example-code"
  >
    <CodeBlock>
      code
    </CodeBlock>
  </div>
</div>
`;

exports[`ContentPage .Markup <CodeExample> renders with unterminated highlighted region 1`] = `
<div
  className="code-example"
>
  <div
    className="code-example-code"
  >
    <CodeBlock>
      One 
      <span
        className="highlight"
      >
        unterminated highlight
      </span>
    </CodeBlock>
  </div>
</div>
`;

exports[`ContentPage .Markup <Column> renders 1`] = `
<div
  className="column"
>
  INSIDE COLUMN
</div>
`;

exports[`ContentPage .Markup <Columns> renders 1`] = `
<div
  className="columns"
>
  INSIDE COLUMNS
</div>
`;

exports[`ContentPage .Markup <Do> renders 1`] = `
<Column>
  <div
    className="do-header"
  >
    <h2>
      Do
    </h2>
    <CheckIcon />
  </div>
  <div
    className="do-section"
  >
    THINGS TO DO
  </div>
</Column>
`;

exports[`ContentPage .Markup <Dont> renders 1`] = `
<Column>
  <div
    className="dont-header"
  >
    <h2>
      Don't
    </h2>
    <CrossIcon />
  </div>
  <div
    className="dont-section"
  >
    DON'T DO THIS
  </div>
</Column>
`;

exports[`ContentPage .Markup <Fail> renders 1`] = `
<Column>
  <div
    className="fail-header"
  >
    <CrossIcon />
     
    <h3>
      Fail
    </h3>
  </div>
  <div
    className="fail-section"
  >
    I FAILED :(
  </div>
</Column>
`;

exports[`ContentPage .Markup <Highlight> renders 1`] = `
<span
  className="highlight"
>
  HIGHLIGHTED
</span>
`;

exports[`ContentPage .Markup <HyperLink> renders 1`] = `
<NewTabLink
  href="http://my.link"
  onClick={[Function]}
>
  LINK TEXT
</NewTabLink>
`;

exports[`ContentPage .Markup <Include> renders 1`] = `"<ContentPageComponent deps={{...}} options={{...}} />"`;

exports[`ContentPage .Markup <Inline> renders 1`] = `
<div
  className="content-inline"
>
  INLINED
</div>
`;

exports[`ContentPage .Markup <LandmarkLegend> renders 1`] = `
<span
  className="landmarks-legend test-landmark"
>
  TEST
</span>
`;

exports[`ContentPage .Markup <LandmarkLegend> renders 2`] = `
<Column>
  <div
    className="do-header"
  >
    <h2>
      Do
    </h2>
    <CheckIcon />
  </div>
  <div
    className="do-section"
  >
    THINGS TO DO
  </div>
</Column>
`;

exports[`ContentPage .Markup <Links> renders with many links 1`] = `
<React.Fragment>
  <div
    className="content-hyperlinks"
  >
    <HyperLink
      href="about:blank"
    >
      One
    </HyperLink>
    <HyperLink
      href="about:blank"
    >
      Two
    </HyperLink>
    <HyperLink
      href="about:blank"
    >
      Three
    </HyperLink>
  </div>
</React.Fragment>
`;

exports[`ContentPage .Markup <Links> renders with one link 1`] = `
<React.Fragment>
  <div
    className="content-hyperlinks"
  >
    <HyperLink
      href="about:blank"
    >
      One
    </HyperLink>
  </div>
</React.Fragment>
`;

exports[`ContentPage .Markup <Links> renders with text 1`] = `
<React.Fragment>
  <div
    className="content-hyperlinks"
  >
    Some text
  </div>
</React.Fragment>
`;

exports[`ContentPage .Markup <Pass> renders 1`] = `
<Column>
  <div
    className="pass-header"
  >
    <CheckIcon />
     
    <h3>
      Pass
    </h3>
  </div>
  <div
    className="pass-section"
  >
    I PASSED :)
  </div>
</Column>
`;

exports[`ContentPage .Markup <PassFail> renders with example headers 1`] = `
<div
  className="pass-fail-grid"
>
  <div
    className="fail-section"
  >
    <div
      className="fail-header"
    >
      <CrossIcon />
       
      <h3>
        Fail
      </h3>
    </div>
    <p>
      I FAILED :(
    </p>
  </div>
  <div
    className="fail-example"
  >
    <CodeExample
      title="How I failed"
    >
      This is the failure [example].
    </CodeExample>
  </div>
  <div
    className="pass-section"
  >
    <div
      className="pass-header"
    >
      <CheckIcon />
       
      <h3>
        Pass
      </h3>
    </div>
    <p>
      I PASSED!
    </p>
  </div>
  <div
    className="pass-example"
  >
    <CodeExample
      title={
        <React.Fragment>
          How I 
          <b>
            passed
          </b>
        </React.Fragment>
      }
    >
      This is the passing [example].
    </CodeExample>
  </div>
</div>
`;

exports[`ContentPage .Markup <PassFail> renders without example headers 1`] = `
<div
  className="pass-fail-grid"
>
  <div
    className="fail-section"
  >
    <div
      className="fail-header"
    >
      <CrossIcon />
       
      <h3>
        Fail
      </h3>
    </div>
    <p>
      I FAILED :(
    </p>
  </div>
  <div
    className="fail-example"
  >
    <CodeExample>
      This is the failure [example].
    </CodeExample>
  </div>
  <div
    className="pass-section"
  >
    <div
      className="pass-header"
    >
      <CheckIcon />
       
      <h3>
        Pass
      </h3>
    </div>
    <p>
      I PASSED!
    </p>
  </div>
  <div
    className="pass-example"
  >
    <CodeExample>
      This is the passing [example].
    </CodeExample>
  </div>
</div>
`;

exports[`ContentPage .Markup <ProblemList> renders 1`] = `
<ul
  className="accessibility-problems-list"
>
  list contetn
</ul>
`;

exports[`ContentPage .Markup <Table> renders 1`] = `
<ul
  className="table"
>
  table contetn
</ul>
`;

exports[`ContentPage .Markup <Title> renders where options not specified 1`] = `
<React.Fragment>
  <h1>
    TEST
  </h1>
</React.Fragment>
`;

exports[`ContentPage .Markup <Title> renders where setPageTitle === false 1`] = `
<React.Fragment>
  <h1>
    TEST
  </h1>
</React.Fragment>
`;

exports[`ContentPage .Markup <Title> renders where setPageTitle === null 1`] = `
<React.Fragment>
  <h1>
    TEST
  </h1>
</React.Fragment>
`;

exports[`ContentPage .Markup <Title> renders where setPageTitle === true 1`] = `
<React.Fragment>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
  >
    <title>
      TEST
       - 
      Accessibility Insights for Web
    </title>
  </HelmetWrapper>
  <h1>
    TEST
  </h1>
</React.Fragment>
`;
